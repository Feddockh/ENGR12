#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

int menu_selections(int n, char options[][20], char filtered_options[][20]);
int randnum(int, int);
int timestamp_generator(int timestamp[][3]);

int main() {
	
	//Variables
	int number_of_options = 5, timestamp[20000][3], number_of_orders, i, ordernum;
	char options[][20] = {"Pizza", "Burger", "Pasta", "Salad", "Tacos"}, filtered_options[][20] = {""};
	FILE *pointer;
	
	
	//Explain purpose for code
	printf("This is the data generator which is representive of the input from the user\n\n");
	
	
	//Passing info to the menu_selections function
	number_of_options = menu_selections(number_of_options, options, filtered_options);
	
	
	//Generate a day full of orders
	number_of_orders = timestamp_generator(timestamp);
	
	//Print timestamp and order
	pointer = fopen("data.txt", "w");
	for (i=0;i<number_of_orders;i++) {
		ordernum = randnum(number_of_options, 1)-1;
		printf("%02d:%02d:%02d, %s\n", timestamp[i][2], timestamp[i][1], timestamp[i][0], filtered_options[ordernum]);
		fprintf(pointer, "%02d:%02d:%02d, %s\n", timestamp[i][2], timestamp[i][1], timestamp[i][0], filtered_options[ordernum]);
	}
	fclose(pointer);
	
	return 0;
}

//Function for determining menu selection
int menu_selections(int n, char options[][20], char filtered_options[][20]) {
	
	int i, j, k;
	char available;
	
	//Display the menu options
	printf("The following menu options are: \n%s", options[0]);
	for(i=1;i<n;i++) {
		printf(", %s", options[i]);
	}
	printf("\n");
	
	
	//Prompting the user to enter which menu options will be available
	//Outer for loop is to ask user about each options
	j = 0;
	for(i=0;i<n;i++) {
		
		//Asking the user if an option is available and error checking reply
		do {
			printf("Will \"%s\" be available? Please enter a \"Y\" or \"N\": ", options[i]);
			scanf(" %c", &available);
		} while (available != 'Y' && available != 'N');
		
		//If an option is available, move it to the filter_options array
		if (available == 'Y') {
			
			//Inner for loop is needed to transfer strings letter by letter
			for (k=0;k<strlen(options[i]);k++) {
				filtered_options[j][k] = options[i][k];
			}
		j++;
		}
	}
	
	//Display the filtered_options to the user
	printf("Today's menu is: %s", filtered_options[0]);
	for(i=1;i<j;i++) {
		printf(", %s", filtered_options[i]);
		
	}
	printf("\n");
	
	//return the new number of options
	n = i;
	
	return n;
}

//Function for generating random numbers within a range
int randnum(int upper, int lower) {
	int x = (rand()%(upper-lower+1))+lower;
	return x;
}

//Function for calculating the timestamp
int timestamp_generator(int timestamp[][3]) {
	
	int i=0;
	int seconds=0, minutes=0, hours=1;
	
	//Using a forever loop to continue to increment seconds according the function
	for (;;) {
		//Using a function depending on the hour to account for high-traffic times
		float multiplier = (.006*pow((hours-12.5),2))+.4;
		int upper = 60.*multiplier;
		
		//Seconds is incremented by the random function with the upper bound dependent on the function
		seconds += randnum(upper, 0);
		
		if (seconds > 60) {
			seconds -= 60;
			minutes++;
		}
		
		if (minutes > 60) {
			minutes -= 60;
			hours++;
		}
		
		timestamp[i][0] = seconds;
		timestamp[i][1] = minutes;
		timestamp[i][2] = hours;
		
		if (i>=20000) {
			printf("ERROR: To many datapoints\n");
			break;
		}
		
		//Breaking loop when hours reaches 24
		if (hours>=24) break;
		i++;
	}
	
	return i;
}
